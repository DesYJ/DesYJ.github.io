[{"title":"独立游戏管理心得","url":"/2025/03/18/Managing-an-Indie-Game/","content":"独立游戏管理心得应做好一个能让新人快速了解项目的”方式”：录制一个讲解视频制作一个ppt\n线下会议\n关于文件素材管理有如此几个tag：\n1.按类型分类\n\n图片素材（2D&#x2F;3D贴图、UI图标、概念图等）\n音频素材（音效、背景音乐、配音）\n3D模型（角色、场景、道具）\n动画文件（骨骼动画、特效动画）\n代码&#x2F;脚本（Shader、工具脚本）\n文档（设计文档、故事脚本、策划案）\n\n2.按项目阶段分类\n\n原始素材（Raw Assets）\n中间素材（Work-in-Progress）\n最终素材（Final Assets）\n废弃素材（Deprecated）\n\n3.按功能或场景分类\n\n角色相关（Characters）\n场景相关（Environments）\nUI相关（UI&#x2F;UX）\n特效相关（VFX）\n\n4.日期\n命名文件名使用清晰的英文或拼音命名，避免中文或特殊符号。\n如：功能或场景_文件名_项目阶段_日期\n示例：Character_Warrior_Raw*Assets.png  (每个tag用 下横线_ 隔开，每个tag中若是有要用到空格的，后一个字母大写，全部字符用英文字符，tag也要用全英的)\n目录结构：Project&#x2F;├── Assets&#x2F;│   ├── Art&#x2F;│   │   ├── Characters&#x2F;│   │   ├── Environments&#x2F;│   │   └── UI&#x2F;│   ├── Audio&#x2F;│   ├── Scripts&#x2F;│   └── Prefabs&#x2F;├── Docs&#x2F;├── ThirdParty&#x2F;└── Builds&#x2F;\n*Project/*项目的根目录，通常包含所有与项目相关的文件和子目录。它是整个工程的组织起点。\n\n*Assets/*存放项目所有资源文件的目录，如模型、贴图、音频、脚本等。在游戏引擎（如Unity）中，这是核心资源文件夹。\n\n*Art/*美术资源目录，包含与视觉相关的文件，例如：\n\n2D&#x2F;3D 模型\n纹理&#x2F;贴图\n动画文件\n概念设计图\n\n\n*Characters/*角色资源目录，存放与游戏角色相关的文件，例如：\n\n角色模型\n骨骼动画\n材质与贴图\n角色特效\n\n\n*Environments/**（可能拼写错误，应为 **Environments/*）\n环境资源目录，包含场景、地形、建筑等环境相关的文件，例如：\n\n3D 场景模型\n地形数据\n植被与道具\n光照设置\n\n\n*UI/*用户界面资源目录，存放与界面设计相关的文件，例如：\n\n按钮图标\n菜单布局\n字体文件\n交互动效\n\n\n*Audio/*音频资源目录，包含所有声音文件，例如：\n\n背景音乐（BGM）\n音效（SFX）\n语音文件（VO）\n\n\n*Scripts/*代码脚本目录，存放项目中的程序代码，例如：\n\n游戏逻辑脚本\n工具脚本\nAI 行为脚本\n\n\n*Prefabs/*预制件目录（见之前的详细解释），用于存放可重复使用的对象模板，例如：\n\n预设的敌人\n可交互道具\n组合场景元素\n\n\n*Docs/*文档目录，包含项目相关的文档，例如：\n\n设计文档\n技术规范\nAPI 说明\n测试报告\n\n\n*ThirdParty/*第三方资源目录，存放外部库、插件或工具，例如：\n\n开源库（如DOTween、FMOD）\n付费插件\nSDK（如Steamworks）\n\n\n*Builds/*构建输出目录，存放编译后的可执行文件或安装包，例如：\n\nWindows&#x2F;Mac 版本游戏\n移动端 APK&#x2F;IPA 文件\n测试版本存档\n\n\n"},{"title":"Hello World","url":"/2025/03/16/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"3.30月记","url":"/2025/03/30/3-30%E6%9C%88%E8%AE%B0/","content":"&#x2F;&#x2F;&#x2F;3.30月记在月下若有若无的鼾声中，我的键敲声显得格外焦躁，但是每一键位的按下又显无力，\n比赛这个月组里的大创项目，落选了，因商业计划书不尽人意，我们之后拿给老师审批，并指出\n没有明确的数据和表格，产品内容特色什么的，缺乏内容，太空了。文字也不够丰满。搞半天我制作的ppt一点都没用上，而且ppt也应该并不让组长满意。风格化太强了，组长更希望是有成熟的手机企业发布会的效果为方向。所以我花了数个月去制作实在太亏了，且之后的比赛组长似乎都并不希望我执手美术相关的工作了，我能够理解，我作为一个业余的平面设计爱好者，能做的事情不多，在大一也许我能够做的就到这了。我应该把方向转到学习技能。我还有很多目标需要学习达成。\n程序学习这一个月我应该掌握C#的入门基础的，但并不乐观，由于我c++的基础我很快的掌握了c#的基础运用，我太容易被一些困难阻挡，以至于消磨掉了那不多的兴趣。明天就去吧ui的程序学了，然后稍微整理一下独立游戏的进度，布置一下下一周的任务。对于游戏开发应该每周都给一定的任务，以防组员有人想做但不知道要做什么，或者虚虚迷迷一周过去什么进度都没做。\n绘画学习绘画上开发了自己的三种风格方向，\n第一种是平涂多角色剪贴在一张画上，角色的细节量少后期工作量不大主要是对绘画的效率有较高的要求，是每一步的有效性。\n地雷瑞瑞\n\n第二种是偏向于对于人体的表达，细节的刻画，比较接近我盆友J | S的画风，但是对透视和人体的理解，材质的细节，各种硬技术力要求很高，我这次的画是画了快有一周，主要时间画在了犹豫与素材寻找上，因为能力不足需要大量的寻找有很高效果的素材，感谢 Pinterest 其对素材的搜索能力以及推荐能力，令我临时冒出的灵感能够及时捕捉下来，再通过剪贴画的形式平凑出设计参考。\nJ|S女鹅新服 第三版\n\n第三种则是对偏向对设计的表达，人物设计色彩设计，人设的设计，主要是对设计有一定要求，我自认为自己还是有一定设计理解的。。但不多。缺点以及进步方向则是，不知道如何提高设计稿的完成度，既害怕，完成度不够，无法对角色的设计进行完好的诠释，又害怕完成度会令设计稿剩下的留白填满，主要是想要消除潦草感，提升质感。\n小教主\n\n动画学习动画上没有过多的建树，尝试一些像素画，需要提的一点寻找到了不错的安卓端的像素绘制软件  dotpict 有广告不过基本够用，这方面的经验更多的是感知方面的，很难表述出来，最重要的是诚恳的承认自己的感知，通过抓住细微的感知，感知动画那里不好，怎样不好，再一步一步基于动画12原则试错，试出最优的改\n霜叶 劈砍\n\n霜叶 走路\n\n霜叶 下蹲\n\n霜叶 待机\n\n"},{"title":"Markdown学习笔记","url":"/2025/03/16/Markdown-notes/","content":"https://markdown.com.cn/basic-syntax/headings.html\n教程书一切忘记的直接查阅\nhttps://www.toolhelper.cn/Code/Markdown\n先用这个编辑工具过渡一下\n"},{"title":"Sucklood(嗜血)游戏开发日志","url":"/2025/03/17/sucklood/","content":"嗜血游戏开发日志\n2025.3.13\n\n召集了一些没有基础的程序，一个策划，我负责美工，程序和策划，还有两个有音乐天赋基础的盆友，受暴力迪吧 联合行动，刃心，迈阿密热线，superhot等优秀前辈游戏的启发，我从高中就有开始策划了这个，侧重解压，爽的肉鸽横板切菜游戏。\n人员管理人员管理是糟糕的，毁灭的，我甚至萌生出单干的想法，毕竟这个游戏最初构想就是我自己拿来练手的，快速开发难度要低的游戏。\n我设置了一个腾讯文档，用来任务发布和实时监督，主要是参考了《互联网原住民》的作者压缩文渐的开发流程，\n但是发现一个问题，我们压根不清楚要有什么项目，要做什么，于是先想到什么就先写什么了，反正我们的优势就是试错成本低，主要分了核心功能基本功能和额外功能，核心优先且确保优秀，基本一定要完成，额外可以选择性开发。\n\n\n如上：项目计划表\n\n令我认为毁灭的问题是，负责程序的同学积极性很低，很大的原因可能是我对游戏的叙述并不清晰，且他们对该领域完全是零基础的不自信，不知道该从何入手，迷茫且害怕，解决方案是用实力战胜不自信和恐惧，他们很多是以分一杯羹或者试试也不会掉块肉的心态来的，但是说实话这个小体量游戏不许要如此多的程序，相反应该更需要美工，所以我定了个时间，两周时间让他们熟悉unity，由最熟悉的担任程序估计会留两个，\n\n独立游戏管理心得应做好一个能让新人快速了解项目的”方式”：录制一个讲解视频制作一个ppt\n线下会议\n关于文件素材管理有如此几个tag：\n1.按类型分类\n\n图片素材（2D&#x2F;3D贴图、UI图标、概念图等）\n音频素材（音效、背景音乐、配音）\n3D模型（角色、场景、道具）\n动画文件（骨骼动画、特效动画）\n代码&#x2F;脚本（Shader、工具脚本）\n文档（设计文档、故事脚本、策划案）\n\n2.按项目阶段分类\n\n原始素材（Raw Assets）\n中间素材（Work-in-Progress）\n最终素材（Final Assets）\n废弃素材（Deprecated）\n\n3.按功能或场景分类\n\n角色相关（Characters）\n场景相关（Environments）\nUI相关（UI&#x2F;UX）\n特效相关（VFX）\n\n4.日期\n命名文件名使用清晰的英文或拼音命名，避免中文或特殊符号。\n如：功能或场景_文件名_项目阶段_日期\n示例：Character_Warrior_Raw*Assets.png  (每个tag用 下横线_ 隔开，每个tag中若是有要用到空格的，后一个字母大写，全部字符用英文字符，tag也要用全英的)\n目录结构：Project&#x2F;├── Assets&#x2F;│   ├── Art&#x2F;│   │   ├── Characters&#x2F;│   │   ├── Environments&#x2F;│   │   └── UI&#x2F;│   ├── Audio&#x2F;│   ├── Scripts&#x2F;│   └── Prefabs&#x2F;├── Docs&#x2F;├── ThirdParty&#x2F;└── Builds&#x2F;\n*Project/*项目的根目录，通常包含所有与项目相关的文件和子目录。它是整个工程的组织起点。\n\n*Assets/*存放项目所有资源文件的目录，如模型、贴图、音频、脚本等。在游戏引擎（如Unity）中，这是核心资源文件夹。\n\n*Art/*美术资源目录，包含与视觉相关的文件，例如：\n\n2D&#x2F;3D 模型\n纹理&#x2F;贴图\n动画文件\n概念设计图\n\n\n*Characters/*角色资源目录，存放与游戏角色相关的文件，例如：\n\n角色模型\n骨骼动画\n材质与贴图\n角色特效\n\n\n*Environments/**（可能拼写错误，应为 **Environments/*）\n环境资源目录，包含场景、地形、建筑等环境相关的文件，例如：\n\n3D 场景模型\n地形数据\n植被与道具\n光照设置\n\n\n*UI/*用户界面资源目录，存放与界面设计相关的文件，例如：\n\n按钮图标\n菜单布局\n字体文件\n交互动效\n\n\n*Audio/*音频资源目录，包含所有声音文件，例如：\n\n背景音乐（BGM）\n音效（SFX）\n语音文件（VO）\n\n\n*Scripts/*代码脚本目录，存放项目中的程序代码，例如：\n\n游戏逻辑脚本\n工具脚本\nAI 行为脚本\n\n\n*Prefabs/*预制件目录（见之前的详细解释），用于存放可重复使用的对象模板，例如：\n\n预设的敌人\n可交互道具\n组合场景元素\n\n\n*Docs/*文档目录，包含项目相关的文档，例如：\n\n设计文档\n技术规范\nAPI 说明\n测试报告\n\n\n*ThirdParty/*第三方资源目录，存放外部库、插件或工具，例如：\n\n开源库（如DOTween、FMOD）\n付费插件\nSDK（如Steamworks）\n\n\n*Builds/*构建输出目录，存放编译后的可执行文件或安装包，例如：\n\nWindows&#x2F;Mac 版本游戏\n移动端 APK&#x2F;IPA 文件\n测试版本存档\n\n\n"}]